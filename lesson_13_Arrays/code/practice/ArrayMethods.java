package practice;

public class ArrayMethods {

    public static void printArray(int[] arr) {
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }

    public static void printArray(String[] arr) {
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }

    // ищем максимальный элемент массива - целые числа
    public static int maxArray(int[] arr) {
        int max = arr[0];
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] > max) {
                max = arr[i];
            }
        }
        return max;
    }

    // ищем индекс максимального элемента
    public static int maxIndex(int[] arr) {
        int max = arr[0];
        int maxIndex = 0;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] > max) {
                max = arr[i];
                maxIndex = i;
            }
        }
        return maxIndex;
    }

    // пузырьковая сортировка от меньшего к большему
    public static int[] sortArray(int[] arr) { // метод, который сортирует массив и воззвращает отсортированный массив
        int min = arr[0];// пресваиваем переменной min значение первого элемента
        int indexMin = 0; // пресваиваем переменной indexMin значение 0
        for (int i = 0; i < arr.length; i++) { // перебираем внешний цикл, начинает с i = 0 и увеличивается на 1 с каждой итерацией, пока i меньше длины массива
            min = arr[i]; // присваиваем текущему элементу значение min
            indexMin = i; // сохраняем индекс минимального элемента
            for (int j = i; j < arr.length; j++) { // перебираем внутрений цикл, начинаем с j = i (текущего значение) и до конца массива
                if (arr[j] < min) { // ищем минимальный элемент
                    min = arr[j]; // если условие выполняеться элементу присваиваем значение min
                    indexMin = j; // сохраняем индекс минимального элемента
                }
            }
            // переставляем минимальный элемент в начало
            int temp = arr[i];// объявляем переменную и присваиваем ей значение текущего элемента
            arr[i] = arr[indexMin];// присваиваем текущему элементу значение элемента с индексом indexMin
            arr[indexMin] = temp; // меняем местами текущий и минимальный элемент
        }
        return arr; // возвращаем отсортированный массив
    }

    // метод печатает разделитель
    public static void splt() {
        System.out.println("=========================================");
    }
// Дополните класс ArrayMethods методами, которые находят:
// минимальный элемент в массиве
// индекс минимального элемента в массиве
// В классе ArrayAppl задайте собственный массив из целых чисел на 10 элементов,
// найдите минимальный элемент и его индекс.
    public static void rondomNambers(int[] arr, int a, int b) { //  метод - поиск случайных целых чисел
        for (int i = 0; i < arr.length; i++) { // перебираем цикл
            arr[i] = (int)(Math.random() * (b - a + 1) + a); // генерируем случайные целые числа
        }
    }

    public static int min(int[] arr) { // метод - поиск минимального значения элемента
        int min = arr[0]; // присваиваем переменной min значение первого элемента
        for (int i = 0; i < arr.length; i++) { // перебираем цикл
            if(arr[i] < min) { // проверяем, являеться ли элемент меньше минимума
                min = arr[i]; // если условие выполняеться присваеваем элементу минимум
            }
        }
        return min; // возвращаем минимальное значение элемента
    }

    public static int minIndex(int[] arr) { // метод - поиск минимального значения индекса элемента
        int min = arr[0]; // присваиваем переменной min значение первого элемента
        int minIndex = 0; // присваиваем переменной minIndex нулевое значение
        for (int i = 0; i < arr.length; i++) { // перебираем цикл
            if(arr[i] < min) { // проверяем, являеться ли элемент меньше минимума
                min = arr[i]; // если условие выполняеться присваеваем минимум элементу
                minIndex = i; // а минимальному индексу значение его индекса
            }
        }
        return minIndex; // возвращаем минимальное значение индекса элемента
    }

    // На базе метода sortArray в классе ArrayMethods создайте метод sortArrayIntAsc,
    // который делает сортировку от большего элемента к меньшему.
    // Примените этот метод в классе ArrayAppl ко всем целочисленным массивам.
    public static int[] sortArrayIntAsc(int[] arr) { // метод, который сортирует массив щт большего к меньшему и возвращает отсортированный массив
        int max = arr[0]; // бъявляем переменную max и присваиваем ей значение первого элемента
        int indexMax = 0; // обїявляем переменную indexMax и присваиваем ей значение 0 (индекс первого элемента)
        for (int i = 0; i < arr.length; i++) { // перебираем внешний цикл
            max = arr[i]; // присваиваем текущему элементу значение max
            indexMax = i; // сохраняем индекс максимального значения
            for (int j = i; j < arr.length; j++) { // перебираем внутрений цикл
                if(arr[j] > max) { // если условие выполняеться, текущий элемент больше max
                    max = arr[j]; // присваиваем текущему элементу значение максимум
                    indexMax = j; // сохраняем индекс элемента max
                }

            }
            // переставляем максимальный элемент в начало
            int tmp = arr[i];// объявляем переменную и присваиваем ей значение текущего элемента
            arr[i] = arr[indexMax];// присваиваем текущему элементу значение элемента с индексом indexMax
            arr[indexMax] = tmp; // меняем местами текущий и масксимальный элемент
        }
        return arr; // возвращаем отсортированный массив
    }
}